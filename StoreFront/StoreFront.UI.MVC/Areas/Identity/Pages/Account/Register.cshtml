@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

@{
    /*
    * STEPS TO EXTEND IDENTITY (aka Custom User Details)
    *
    * - Prerequisite: Must have a table in the database available to store the extra user information. In GadgetStore, that's the UserDetails table.
    *
    * 1) (Code-Behind) Add properties to the InputModel to map our UserDetails properties
    * 2) (Razor Page/View) Add textboxes to accommodate the new properties
    * 3) (Code-Behind) Create a GadgetStoreContext object and UserDetails object in the OnPostAsync()
    *      - Add 'using [ProjectName].DATA.EF.Models;'
    *      - Instantiate a new UserDetail object and GadgetStoreContext object
    *      - Assign values to the UserDetails object
    *      - Use the _context to save the UserDetails object to the database
    */
}

<h1 class="text-center">@ViewData["Title"]</h1>
<h2 class="text-center">Create a new account.</h2>

<div class="container">

    <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
        <div class="row">
            <div class="col m-4 align-content-center">


                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-floating">
                    <label asp-for="Input.Email"></label>
                    <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="Email" />
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-floating">
                    <label asp-for="Input.Password"></label>
                    <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Password" />
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="form-floating">
                    <label asp-for="Input.ConfirmPassword"></label>
                    <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Confirm Password" />
                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                </div>

                @*Add inputs below for User info*@
                <div class="form-floating">
                    <label asp-for="Input.FirstName"></label>
                    <input asp-for="Input.FirstName" class="form-control" autocomplete="firstname" aria-required="true" placeholder="First Name" />
                    <span asp-validation-for="Input.FirstName" class="text-danger"></span>
                </div>

                <div class="form-floating">
                    <label asp-for="Input.LastName"></label>
                    <input asp-for="Input.LastName" class="form-control" autocomplete="lastname" aria-required="true" placeholder="LastName" />
                    <span asp-validation-for="Input.LastName" class="text-danger"></span>
                </div>
            </div>
            <div class="col m-4 align-content-center offset-4">
                <div class="form-floating">
                    <label asp-for="Input.Address"></label>
                    <input asp-for="Input.Address" class="form-control" autocomplete="address" aria-required="true" placeholder="Address" />
                    <span asp-validation-for="Input.Address" class="text-danger"></span>
                </div>

                <div class="form-floating">
                    <label asp-for="Input.City"></label>
                    <input asp-for="Input.City" class="form-control" autocomplete="city" aria-required="true" placeholder="City" />
                    <span asp-validation-for="Input.City" class="text-danger"></span>
                </div>

                <div class="form-floating">
                    <label asp-for="Input.State"></label>
                    <input asp-for="Input.State" class="form-control" autocomplete="state" aria-required="true" placeholder="State" />
                    <span asp-validation-for="Input.State" class="text-danger"></span>
                </div>

                <div class="form-floating">
                    <label asp-for="Input.Zip"></label>
                    <input asp-for="Input.Zip" class="form-control" autocomplete="zip" aria-required="true" placeholder="Zip" />
                    <span asp-validation-for="Input.Zip" class="text-danger"></span>
                </div>

                <div class="form-floating">
                    <label asp-for="Input.Phone"></label>
                    <input asp-for="Input.Phone" class="form-control" autocomplete="phone" aria-required="true" placeholder="Phone" />
                    <span asp-validation-for="Input.Phone" class="text-danger"></span>
                </div>
                <hr />
                <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
                <hr />
            </div>
        </div>
    </form>
</div>

<!-- Prewritten code for external authorization-->
<!--
@*<div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                            about setting up this ASP.NET application to support logging in via external services</a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>*@
</div>
-->
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    }
